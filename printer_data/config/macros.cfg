[gcode_macro CG28]
gcode:
    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
    G28
    {% endif %}

[gcode_macro PURGELINE]
gcode:
    G90
    G1 X5 Y4 Z0.4 F10000                             # Moves to starting point
    G1 X40 E20 F1000
    G92 E0
    G1 Z0.8 F10000
    G1 X5 E20 F700
    G92 E0
    # G1 X5 Y4 Z0.4 F10000
    # G1 Z4 E20 F30
    # G91
    # G1 E-2 F3000
    # G90
    # G1 X60 Y60 Z8 F10000
    # G92 E0

[gcode_macro SCRUB_NOZZLE]
variable_start_x: 60
variable_start_y: 0
variable_start_z: 0.02
variable_wipe_dist: -6
variable_wipe_qty: 3
variable_wipe_spd: 40
variable_raise_distance: 30
variable_raise_y: 30

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
 G90                                            ; absolute positioning
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd}
   G1 X{start_x} F{wipe_spd}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance} F1000
    

#####################################################################
#   print_start macro
#####################################################################

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}
  SET_FAN_SPEED FAN=Aux_Fan SPEED=0
  SET_PRESSURE_ADVANCE ADVANCE=0.036
  SET_PIN PIN=Light VALUE=1
  
  # Homes the printer and sets absolute positioning
  STATUS_HOMING
  G28                   # Full home (XYZ)
  G90                   # Absolut position
  
  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
  {% if params.BED|int > 90 %}
    M106 S150                                         # Turns on the PT-fan
    SET_FAN_SPEED FAN=Aux_Fan SPEED=0.3                    # Turns on the Aux fan
    G1 X{x_wait} Y{y_wait} Z15 F9000                  # Goes to center of the bed
    STATUS_HEATING
    M190 S{target_bed}                                # Sets target temp for the bed
    #TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c then it skips the heatsoak and just heats up to set temp with a 5min soak.
  {% else %}
    G1 X{x_wait} Y{y_wait} Z15 F9000                # Goes to center of the bed
    STATUS_HEATING
    M190 S{target_bed}                              # Sets target temp for the bed
    #G4 P300000                                      # Waits 5 min for the bedtemp to stabilize
  {% endif %}
  STATUS_MESHING
  #BED_MESH_CALIBRATE
  BED_MESH_CALIBRATE ADAPTIVE=1
  # Heats up the nozzle up to target via slicer
  STATUS_HEATING
  M107                                              # Turns off the PT-fan
  M109 S{target_extruder}                           # Heats the nozzle to your print temp
  SET_FAN_SPEED FAN=Aux_Fan SPEED=0
  #BED_MESH_PROFILE LOAD=ASA
  # Create a purge line and starts the print
  #SCRUB_NOZZLE
  PURGELINE
  G90
  G1 X60
  #G28 Z
  SET_GCODE_OFFSET Z=-0.07
  STATUS_PRINTING


[gcode_macro PRINT_END]
gcode:
    STATUS_READY
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F1600                ; retract filament
    G91                            ; relative positioning
    G0 Z8 F2000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z8 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0 X60 Y110 F3600            ; park nozzle at rear
    M84                            ; disable stepper
    SET_PIN PIN=Light VALUE=0.1
 


[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(50) %}      #edit to your park position
    {% set y = params.Y|default(50) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(0.5) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{e} F2100
    G1 Z{z_safe}
    G90
    G1 X{x} Y{y} F6000


[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### set defaults #####
    {% set e = params.E|default(0.5) %} #edit to your retract length
    G91
    G1 E{e} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[pause_resume]


[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    M300 # beep
    G92 E0
    G1 E25 F{speed} # purge
    G1 E-100 F{max_velocity} # fast-unload
    M300
    M300
    RESTORE_GCODE_STATE NAME=unload_state


[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=load_state
    M300 # beep
    G91
    G92 E0
    G1 E100 F{max_velocity} # fast-load
    G1 E25 F{speed} # purge
    M300
    M300
    RESTORE_GCODE_STATE NAME=load_state



[force_move]
# Enable commands that force potentially unsafe movement
enable_force_move: True

[gcode_macro UNSAFE_BED_DOWN]
description: Lower the bed 50mm without homing
gcode:
  G90
  SET_KINEMATIC_POSITION Z=0
  G0 Z50 F600
  M84

[gcode_macro PID_TUNE]
gcode:
	{% set e_tune = params.TEMP|default(0)|int %}
    {% if e_tune > 110 %}
    {% set output = ["PID_CALIBRATE HEATER="] %} 
    {% set dummy = output.append("extruder TARGET=%.2f" % e_tune) %}
    {% else %}
    {% set output = ["PID_CALIBRATE HEATER="] %} 
    {% set dummy = output.append("heater_bed TARGET=%.2f" % e_tune) %}
    {% endif %}
    {output|join("")}  

# [gcode_macro M190]
# rename_existing: M209
# gcode:
#     #Parameters
#     {% set s = params.S|float %}
    
#     M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
#     {% if s != 0 %}
#         TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-5} MAXIMUM={s+5}   ; Wait for hotend temp (within 1 degree)
#     {% endif %}     